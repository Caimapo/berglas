# Copyright 2019 The Berglas Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

jobs:
  # test runs the tests
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: '1.14'

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go get -t ./...

    - name: Lint
      run: make fmtcheck staticcheck spellcheck
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Setup credentials
      run: echo '${{ secrets.GOOGLE_CREDENTIALS }}' > ${{ runner.temp }}/account.json

    - name: Test
      run: make test-acc
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/account.json
        GOOGLE_CLOUD_PROJECT: berglas-test
        GOOGLE_CLOUD_BUCKET: berglas-test-secrets
        GOOGLE_CLOUD_KMS_KEY: projects/berglas-test/locations/global/keyRings/my-keyring/cryptoKeys/my-key
        GOOGLE_CLOUD_SERVICE_ACCOUNT: berglas-test@berglas-test.iam.gserviceaccount.com

  # binaries builds and publishes the go binaries, only on push and tag
  binaries:
    if: ${{ success() && (github.event_name == 'push' || github.event_name == 'tag') }}
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: ['darwin', 'linux', 'windows']
        goarch: ['amd64']

    name: ${{ matrix.goos }}/${{ matrix.goarch }}

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-go@v2
      with:
        go-version: '1.14'

    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go get -t ./...

    - name: Build binaries
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |-
        go build \
          -a \
          -trimpath \
          -ldflags "-s -w -extldflags '-static'" \
          -tags 'osusergo netgo static_build' \
          -o build/${{ env.GOOS }}_${{ env.GOARCH }}/berglas \
          . \
          && \
        strip build/${{ env.GOOS }}_${{ env.GOARCH }}/berglas \
          && \
        chmod +x build/${{ env.GOOS }}_${{ env.GOARCH }}/berglas

    - name: Upload binaries
      uses: GoogleCloudPlatform/github-actions/upload-cloud-storage@master
      with:
        credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
        path: build/
        destination: gs://berglas/${{ github.ref }}/
